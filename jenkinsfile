pipeline {
    agent any
    environment {
        DOCKER_CREDENTIALS_ID = 'dockerhub-credentials'
        DOCKER_IMAGE = 'deeeye2/devops-bot-frontend:latest'
        SSH_SERVER_NAME = 'kubeconfig' // Use the name defined in the Publish Over SSH plugin
    }
    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/deeeye2/DevOps-Bot-frontend.git'
            }
        }
        stage('Test Frontend') {
            steps {
                script {
                    docker.image('node:14').inside("-u root:root") {
                        sh 'npm config set cache /tmp/.npm --global'
                        sh 'npm install'
                        sh 'npm test || echo "No tests found"'
                    }
                }
            }
        }
        stage('Build Frontend Docker Image') {
            steps {
                script {
                    docker.build(DOCKER_IMAGE)
                }
            }
        }
        stage('Push Frontend Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', DOCKER_CREDENTIALS_ID) {
                        docker.image(DOCKER_IMAGE).push()
                    }
                }
            }
        }
        stage('Deploy to Kubernetes') {
            steps {
                echo "Deploying DevOps Bot Frontend to Kubernetes"
                sshPublisher(publishers: [
                    sshPublisherDesc(
                        configName: SSH_SERVER_NAME,
                        transfers: [
                            sshTransfer(
                                sourceFiles: 'devops-bot-frontend.yml',
                                removePrefix: '',
                                remoteDirectory: '',
                                execCommand: '''
                                    echo "Navigating to home directory..."
                                    cd /home/minikubeuser
                                    if [ -f devops-bot-frontend.yml ]; then
                                        echo "Applying Kubernetes configuration..."
                                        kubectl apply -f devops-bot-frontend.yml
                                    else
                                        echo "File devops-bot-frontend.yml does not exist"
                                        exit 1
                                    fi
                                '''
                            )
                        ],
                        verbose: true
                    )
                ])
            }
        }
    }
    post {
        success {
            echo 'Pipeline completed successfully.'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}
